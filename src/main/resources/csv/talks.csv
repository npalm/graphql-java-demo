title,conferences,speakers,summary,
"GraphQL - The Next API Language","JavaZone 2018",Niek,"Today we build most of our API’s in a RESTful way by delivering json data. This approach creates a tight and inflexible coupling between front- and back-end, and requires many client server interactions. This way of using an API on mobile devices, which are typically connected via unreliable, slow, and high latency networks, causes developers a lot of headaches. However, there is a new API kid on the block: GraphQL that solves this issues. GraphQL is a new way of specifying an API based on the demand of the API consumer. I will show you the the power of GraphQL and what you can do with GraphQL that could not be done with REST."
"GraphQL - The Next API Language","GeeCon 2017",Niek,"Today we build most of our API’s in a RESTful way by delivering json data. This approach creates a tight and inflexible coupling between front- and back-end, and requires many client server interactions. This way of using an API on mobile devices, which are typically connected via unreliable, slow, and high latency networks, causes developers a lot of headaches. However, there is a new API kid on the block: GraphQL that solves this issues. GraphQL is a new way of specifying an API based on the demand of the API consumer. I will show you the the power of GraphQL and what you can do with GraphQL that could not be done with REST."
"Immutable Infrastructure","DevOpsDays 2017","Niek","he Docker slogan 'Build, Ship, and Run' advertises easy set up of immutable software builds, but it is not always that easy. Setting up immutable builds with Docker is pretty straight forward and shipping is just a matter of pushing the image to a repository. The next step is building the cloud infrastructure to run the containers. In this talk I briefly touch upon building immutable software. But the main focus of the talk will be on creating an immutable infrastructure. In this talk I will show you how to create an immutable infrastructure on AWS with Terraform. I will use a real world example to explain and show live how easy you can get micro services live on AWS and continuously apply changes to the same cloud environment"
"Software Architecture for Developers","Nextbuild 2018",Simon,"The software development industry has made huge leaps in recent years; with agile, lean, software craftsmanship, evolutionary design and microservices being just a few of the buzzwords we throw around. Despite this, software development teams are often more chaotic than they are self-organising, with the resulting code being more of a mess than was perhaps anticipated. Successful software projects aren’t just about good code though, and sometimes you need to step away from the IDE for a few moments to see the bigger picture. This session is about that bigger picture and is aimed at software developers who want to learn more about software architecture, technical leadership and the balance with agility. This talk will debunk some of the common myths as we look at five things every developer should know about software architecture; a guide to software architecture on modern software projects that’s pragmatic rather than academic and lightweight rather than “enterprisey”."
"Open Source all the offentlig things! - men hvordan gjør vi det i NAV?","JavaZone 2018","Audun,Truls","NAV har hatt IT-systemer i over 50 år. Kildekoden til disse systemene har vært lukket, i likhet med andre offentlige IT-systemer. Kildekoden til disse systemene bør være åpent tilgjengelig av flere årsaker; det at de er finansiert over skatteseddelen er bare en av dem. Nå åpner vi (gradvis) opp koden vår!  Open Source forutsetter kvalitet. Ikke bare i koden, men også i organisasjonen. Denne kvaliteten har ikke NAV hatt frem til nå. Denne presentasjonen handler om hvilke grep NAV har tatt det det siste året for å bli gode nok til at vi kan åpne koden vår på en forsvarlig måte. Vi vil dele erfaringer fra å bygge en moderne utviklingsorganisasjon inne i en eksisterende organisasjon. Hva har vært lett, og hva har vært vanskelig? Hva har fungert, og hva har ikke fungert?NAV har "
